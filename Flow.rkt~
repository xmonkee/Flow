#lang racket
(require slideshow)

(define (underline txt)
  (vc-append txt (hline (pict-width txt) 1)))

(define (grid x y rs cs items)
  (apply vl-append 
         (for/list ([row items])
           (apply hbl-append row))))


(define-syntax my-slide
  (syntax-rules ()
    [(my-slide . sfs)
     (slide (t "hello"))]))

(define sf1
  (lambda num
      (grid 0 0 3 2 
        (list
           (list (underline (t "Goal")) (t "Program that keeps track of friends"))
           (list (underline (t "Problem")) (t "Arrays have fixed length"))
           (list (underline (t "Solution")) (bt "Linked Lists"))))))

(define sf2
  (let ([ll (grid 0 0 1 1 (list (list (t "Linked List"))))])
    (lambda num
      (if (>= num 2)
          ll
          (ghost ll)))))



(my-slide sf1 sf2)